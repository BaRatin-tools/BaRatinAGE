<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project default="all">

    <property name="name" value="BaRatinAGE" />
    <property name="version" value="2.2.1" />

    <property name="root" value="." />

    <!-- no extension: BaRatin or BaM ______________________________ -->
    <property name="bamexe" value="BaRatin" />

    <!-- no extension: must be ico for windows and png for unix ____ -->
    <property name="iconfile" value="${root}/icon/icon" />

    <property name="nameversion" value="${name}_${version}" />
    <property name="jarfile" value="${nameversion}.jar" />

    <property name="src" value="${root}/src" />
    <property name="build" value="${root}/build" />
    <property name="dist" value="${root}/dist" />
    <property name="final" value="${dist}/${nameversion}" />

    <!-- dependencies: external libraries to add to the build ______ -->
    <property name="extlib.jfreechart" value="${root}/externalLib/jfreechart-1.5.3/target/jfreechart-1.5.3.jar" />
    <property name="extlib.orsonpdf" value="${root}/externalLib/orsonpdf-1.9.1/target/orsonpdf-1.9.1.jar" />
    <property name="extlib.opencsv" value="${root}/externalLib/opencsv-5.7.0.jar" />
    <property name="extlib.juniversalchardet" value="${root}/externalLib/juniversalchardet-2.4.0.jar" />

    <target name="all" depends="clean, init, build, jar, package" />
    <target name="no-package" depends="clean, init, build, jar" />

    <target name="init">
        <echo> 
Create build directory containing all the java files to compile
        </echo>
        <copy includeemptydirs="false" todir="${build}">
            <fileset dir="${src}">
                <exclude name="**/*.launch" />
                <exclude name="**/*.java" />
            </fileset>
        </copy>
    </target>

    <target name="clean">
        <echo message="Delete build directory" />
        <delete dir="${build}" />
    </target>

    <!-- build java project -->
    <target name="build" depends="init">
        <!-- <echo message="Compilation: running javac to compile java files" /> -->
        <!-- <property name="jvm.source" value="11" />
        <property name="jvm.target" value="11" /> -->
        <!-- <javac srcdir="${src}" destdir="${build}" source="${jvm.source}" target="${jvm.target}"  includeantruntime="false"> -->
        <javac srcdir="${src}" destdir="${build}" includeantruntime="false">
            <classpath location="${extlib.jfreechart}" />
            <classpath location="${extlib.orsonpdf}" />
            <classpath location="${extlib.opencsv}" />
            <classpath location="${extlib.juniversalchardet}" />
        </javac>
    </target>

    <!-- create runnable jar file -->
    <target name="jar">
        <echo message="Creating runnable Jar file: ${root}/${jarfile}" />
        <jar destfile="${root}/${jarfile}">
            <manifest>
                <attribute name="Main-Class" value="controleur.Main" />
                <attribute name="Class-Path" value="." />
            </manifest>
            <fileset dir="${build}" />
            <zipfileset src="${extlib.jfreechart}" />
            <zipfileset src="${extlib.orsonpdf}" />
            <zipfileset src="${extlib.opencsv}" />
            <zipfileset src="${extlib.juniversalchardet}" />
        </jar>
    </target>

    <target name="package" depends="set-os-dep-properties">
        <fail message="The target folder ${final} already exist!">
            <condition>
                <available file="${final}" />
            </condition>
        </fail>

        <echo> 
Creating temporary directories...
        </echo>
        <tempfile property="tmpdir.source" destDir="${java.io.tmpdir}" prefix="ant-jpackage-" />
        <mkdir dir="${tmpdir.source}" />
        <tempfile property="tmpdir.target" destDir="${java.io.tmpdir}" prefix="ant-jpackage-" />
        <mkdir dir="${tmpdir.target}" />

        <echo> 
Creating temporary directories...
        </echo>
        <echo message="Copying jar file ${jarfile} into ${tmpdir.source}" />
        <copy file="${root}/${jarfile}" todir="${tmpdir.source}" />

        <echo> 
Running jpackage...
        </echo>
        <exec executable="jpackage">
            <arg value="--type" />
            <arg value="app-image" />
            <arg value="--app-version" />
            <arg value="${version}" />
            <arg value="--description" />
            <arg value="${name}" />
            <arg value="--name" />
            <arg value="${name}" />
            <arg value="--dest" />
            <arg value="${tmpdir.target}" />
            <arg value="--input" />
            <arg value="${tmpdir.source}" />
            <arg value="--main-jar" />
            <arg value="${jarfile}" />
            <arg value="--icon" />
            <arg value="${icon.fullpath}" />
        </exec>

        <echo> 
Moving packaging result into target directory...
        </echo>
        <move file="${tmpdir.target}/${name}" tofile="${final}" />

        <echo> 
Copying required ressources into final exe directory...
        </echo>

        <copy todir="${finalexe.targetdir}/exe">
            <fileset file="${root}/exe/${bamexe.fullname}" />
        </copy>
        <chmod file="${finalexe.targetdir}/exe/${bamexe.fullname}" perm="a+rx" />
        <copy todir="${finalexe.targetdir}/lang">
            <fileset dir="${root}/lang" />
        </copy>
        <copy todir="${finalexe.targetdir}/help">
            <fileset dir="${root}/help" />
        </copy>
        <copy todir="${finalexe.targetdir}/exemple">
            <fileset dir="${root}/exemple" />
        </copy>
        <copy todir="${finalexe.targetdir}/options">
            <fileset dir="${root}/options" />
        </copy>
        <copy file="${root}/README.md" todir="${finalexe.targetdir}" />
        <mkdir dir="${finalexe.targetdir}/recycle" />
        <mkdir dir="${finalexe.targetdir}/exe/workspace" />

        <echo> 
Creating zip file
        </echo>
        <zip destfile="${dist}/${nameversion}.zip" basedir="${final}" />

        <echo> 
Cleaning up...
        </echo>
        <delete dir="${tmpdir.source}" />
        <delete dir="${tmpdir.target}" />
    </target>

    <target name="set-os-dep-properties">

        <!-- on unix, the final exe is located in the bin folder, on windows, its the root folder -->
        <condition property="finalexe.targetdir" value="${final}">
            <os family="windows" />
        </condition>
        <condition property="finalexe.targetdir" value="${final}/bin">
            <os family="unix" />
        </condition>
        <property name="exe.targetdir" value="${final}" />

        <condition property="bamexe.fullname" value="${bamexe}.exe">
            <os family="windows" />
        </condition>
        <condition property="bamexe.fullname" value="${bamexe}">
            <os family="unix" />
        </condition>
        <property name="bamexe.fullname" value="${bamexe}.exe" />

        <condition property="icon.fullpath" value="${iconfile}.ico">
            <os family="windows" />
        </condition>
        <condition property="icon.fullpath" value="${iconfile}.png">
            <os family="unix" />
        </condition>
        <property name="icon.fullpath" value="${iconfile}.ico" />


    </target>


</project>